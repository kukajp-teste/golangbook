// Code generated by protoc-gen-go.
// source: PersonMsg.proto
// DO NOT EDIT!

/*
Package example is a generated protocol buffer package.

It is generated from these files:
	PersonMsg.proto
	RegMessage.proto
	test.proto

It has these top-level messages:
	Person
	RegMessage
	Test
*/
package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Person struct {
	// ID（必需）
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 姓名（必需）
	Name *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	// email（可选）
	Email *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	// 朋友（集合）
	Friends          []string `protobuf:"bytes,4,rep,name=friends" json:"friends,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Person) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Person) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Person) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *Person) GetFriends() []string {
	if m != nil {
		return m.Friends
	}
	return nil
}

func init() {
	proto.RegisterType((*Person)(nil), "Person")
}

var fileDescriptor0 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x0f, 0x48, 0x2d, 0x2a,
	0xce, 0xcf, 0xf3, 0x2d, 0x4e, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe2, 0x62, 0x83,
	0x08, 0x09, 0x71, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x69, 0xb0, 0x0a, 0xf1, 0x70,
	0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x01, 0x79, 0x9c, 0x42, 0xbc, 0x5c, 0xac, 0xa9, 0xb9,
	0x89, 0x99, 0x39, 0x12, 0xcc, 0x0a, 0x8c, 0x40, 0x2e, 0x3f, 0x17, 0x7b, 0x5a, 0x51, 0x66, 0x6a,
	0x5e, 0x4a, 0xb1, 0x04, 0x8b, 0x02, 0xb3, 0x06, 0xa7, 0x93, 0x1c, 0x97, 0x70, 0x72, 0x7e, 0xae,
	0x5e, 0x4e, 0x7e, 0x7a, 0x7e, 0x7e, 0x72, 0xb2, 0x5e, 0x6a, 0x45, 0x62, 0x6e, 0x41, 0x4e, 0x6a,
	0x14, 0x3b, 0x94, 0x01, 0x08, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x36, 0x00, 0xae, 0x75, 0x00, 0x00,
	0x00,
}
